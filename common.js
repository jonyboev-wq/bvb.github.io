
const CFG_CANDIDATES = ['shopConfig.json','./shopConfig.json','/shopConfig.json'];
const THEME_KEY = 'theme';
const CART_KEY  = 'cart';
const $ = (s, el=document) => el.querySelector(s);
const $$ = (s, el=document) => Array.from(el.querySelectorAll(s));
function slugify(s){ return s?.toString().toLowerCase().trim().replace(/\s+/g,'-').replace(/[^\w\-]+/g,'') || ''; }

// Theme
function applyTheme(t){ document.documentElement.setAttribute('data-theme', t); localStorage.setItem(THEME_KEY, t); }
function toggleTheme(){
  const t = (localStorage.getItem(THEME_KEY) || 'light') === 'light' ? 'dark' : 'light';
  applyTheme(t); updateThemeIcon();
}
function updateThemeIcon(){
  const t = localStorage.getItem(THEME_KEY) || 'light';
  const el = document.getElementById('theme-icon');
  if(el){ el.textContent = (t==='light' ? 'üåô' : '‚òÄÔ∏è'); }
}

// Cart
function getCart(){ try{return JSON.parse(localStorage.getItem(CART_KEY)||'[]')}catch{ return [] } }
function saveCart(c){ localStorage.setItem(CART_KEY, JSON.stringify(c)); updateCartCount(); }
function updateCartCount(){ const c = getCart().reduce((a,x)=>a+(x.qty||1),0); const el = document.getElementById('cart-count'); if(el) el.textContent = c; }
function addToCart(item){
  const cart = getCart();
  const idx = cart.findIndex(x=>x.sku===item.sku && x.title===item.title);
  if(idx>-1){ cart[idx].qty += item.qty || 1; } else { cart.push({...item, qty: item.qty||1}); }
  saveCart(cart); alert('–¢–æ–≤–∞—Ä –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–æ—Ä–∑–∏–Ω—É');
}

// Default config (fallback)
const DEFAULT_CONFIG = {
  _fromFallback: true,
  name: "BVB",
  tag: "–û—Ñ–∏—Ü–∏–∞–ª—å–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –º–∞–≥–∞–∑–∏–Ω–∞",
  heroTitle: "–õ—É—á—à–∏–µ —Ç–æ–≤–∞—Ä—ã –ø–æ —á–µ—Å—Ç–Ω—ã–º —Ü–µ–Ω–∞–º",
  heroSub: "–î–æ–±–∞–≤—å—Ç–µ —Ñ–∞–π–ª shopConfig.json –≤ –∫–æ—Ä–µ–Ω—å —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è, —á—Ç–æ–±—ã –ø–æ–∫–∞–∑–∞—Ç—å –≤–∞—à–∏ —Ç–æ–≤–∞—Ä—ã.",
  socials: [],
  products: []
};

async function loadConfig(){
  for (const url of CFG_CANDIDATES){
    try{
      const res = await fetch(url, {cache:'no-cache'});
      if(!res.ok) continue;
      const txt = await res.text();
      const json = JSON.parse(txt);
      if (json && Array.isArray(json.products)) return json;
    }catch(e){ /* try next */ }
  }
  return DEFAULT_CONFIG;
}
